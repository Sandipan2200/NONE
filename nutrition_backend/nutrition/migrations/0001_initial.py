# Generated by Django 4.2 on 2025-09-26 15:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DietPlanTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("target_calorie_range_min", models.IntegerField()),
                ("target_calorie_range_max", models.IntegerField()),
                ("suitable_for_states", models.TextField(blank=True)),
                (
                    "budget_tier",
                    models.CharField(
                        choices=[
                            ("low", "Low (₹100-200/day)"),
                            ("medium", "Medium (₹200-400/day)"),
                            ("high", "High (₹400+/day)"),
                        ],
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Disease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "dietary_restrictions",
                    models.TextField(blank=True, help_text="JSON format restrictions"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="FoodCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="FoodItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("calories_per_100g", models.FloatField()),
                ("protein_per_100g", models.FloatField()),
                ("carbohydrates_per_100g", models.FloatField()),
                ("fat_per_100g", models.FloatField()),
                ("fiber_per_100g", models.FloatField(default=0)),
                ("sugar_per_100g", models.FloatField(default=0)),
                ("sodium_per_100g", models.FloatField(default=0)),
                (
                    "available_states",
                    models.TextField(help_text="Comma-separated state codes"),
                ),
                (
                    "budget_tier",
                    models.CharField(
                        choices=[
                            ("low", "Low (₹100-200/day)"),
                            ("medium", "Medium (₹200-400/day)"),
                            ("high", "High (₹400+/day)"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "average_cost_per_100g",
                    models.FloatField(help_text="Cost in rupees"),
                ),
                (
                    "allergens",
                    models.TextField(blank=True, help_text="Comma-separated allergens"),
                ),
                (
                    "dietary_tags",
                    models.TextField(
                        blank=True, help_text="vegetarian,vegan,gluten-free,etc"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="nutrition.foodcategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Meal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("dinner", "Dinner"),
                            ("snack", "Snack"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("preparation_time", models.IntegerField(help_text="Time in minutes")),
                ("suitable_for_states", models.TextField(blank=True)),
                ("dietary_tags", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "suitable_for_diseases",
                    models.ManyToManyField(blank=True, to="nutrition.disease"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeeklyDietPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week_start_date", models.DateField()),
                ("daily_calorie_target", models.IntegerField()),
                ("daily_protein_target", models.FloatField()),
                ("daily_carbs_target", models.FloatField()),
                ("daily_fat_target", models.FloatField()),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="nutrition.dietplantemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "week_start_date")},
            },
        ),
        migrations.AddField(
            model_name="dietplantemplate",
            name="target_diseases",
            field=models.ManyToManyField(blank=True, to="nutrition.disease"),
        ),
        migrations.CreateModel(
            name="UserDisease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("diagnosed_date", models.DateField(blank=True, null=True)),
                ("severity", models.CharField(blank=True, max_length=20)),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="nutrition.disease",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diseases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "disease")},
            },
        ),
        migrations.CreateModel(
            name="MealFood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity_grams", models.FloatField()),
                (
                    "food_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="nutrition.fooditem",
                    ),
                ),
                (
                    "meal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="foods",
                        to="nutrition.meal",
                    ),
                ),
            ],
            options={
                "unique_together": {("meal", "food_item")},
            },
        ),
        migrations.CreateModel(
            name="DailyMealPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_calories", models.FloatField()),
                ("total_protein", models.FloatField()),
                ("total_carbs", models.FloatField()),
                ("total_fat", models.FloatField()),
                (
                    "breakfast",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="breakfast_plans",
                        to="nutrition.meal",
                    ),
                ),
                (
                    "dinner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dinner_plans",
                        to="nutrition.meal",
                    ),
                ),
                (
                    "lunch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lunch_plans",
                        to="nutrition.meal",
                    ),
                ),
                (
                    "snacks",
                    models.ManyToManyField(
                        blank=True, related_name="snack_plans", to="nutrition.meal"
                    ),
                ),
                (
                    "weekly_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_plans",
                        to="nutrition.weeklydietplan",
                    ),
                ),
            ],
            options={
                "unique_together": {("weekly_plan", "date")},
            },
        ),
    ]
